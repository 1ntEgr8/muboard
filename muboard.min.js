!function(){"use strict";let a,i,e=null;const t={};const o={green:`
      html {height: 100%}
      body {
        background: #eec; font-family: helvetica, arial, sans-serif;
        line-height: 1.5; margin: 0; padding: 0.5em;
        height: 100%; display: flex; flex-direction: column;
      }
      main {
        border: thick solid #933; background: #255; color: #eed;
        padding: 1em; height: 60%; resize: both; overflow: auto;
      }
      :first-child {margin-top: 0}
      a:link, a:visited {color: #ccf}
      a:hover, a:active {color: #e76}
      hr {border: 0; border-bottom: thin solid #fbc}
      .center {text-align: center}
      textarea {
        background: #111; color: #9c9; margin: auto; margin-top: 1em;
        height: 30%; width: 95%;
      }
`};function r(){console.log("render() ..."),i.innerHTML=window.texme.render(a.value),window.MathJax.texReset(0),window.MathJax.typeset()}function d(){c(),e=window.setTimeout(r,t.renderDelay)}function c(){null!==e&&(window.clearTimeout(e),e=null)}function s(e,t,n){var d=a.selectionStart,i=d-e.length,e=i+t.length;const o=a.value;c(),a.value=o.substr(0,i)+t+n+o.substr(d),a.setSelectionRange(e,e)}function l(e){var t=a.selectionStart;let n;n=t<=10?a.value.substr(0,t):a.value.substr(t-10,10);t=n.lastIndexOf(",");if(-1!==t)switch(n.substr(t)){case",i":s(",i","$ "," $"),r();break;case",d":s(",d","$$ "," $$"),r();break;case",align;":s(",align;","\\begin{align}\n","\n\\end{align}"),r();break;case",align*":s(",align*","\\begin{align*}\n","\n\\end{align*}"),r();break;case",center":s(",center",'<div class="center">\n',"\n</div>"),r();break;case",clear":c(),i.innerHTML=a.value="",r();break;case",help":s(",help","",""),i.innerHTML=`
<p>
Muboard supports these commands that may be typed anywhere in the
input text field:
</p>
<dl>
  <dt><code>,clear</code></dt>
  <dd>Clear text input field and the board.</dd>

  <dt><code>,i</code></dt>
  <dd>Insert inline mathematics.</dd>

  <dt><code>,d</code></dt>
  <dd>Insert display mathematics.</dd>

  <dt><code>,align;</code></dt>
  <dd>Insert align envrionment.</dd>

  <dt><code>,align*</code></dt>
  <dd>Insert align* environment.</dd>

  <dt><code>,center</code></dt>
  <dd>Insert center-aligned text.</dd>

  <dt><code>,help</code></dt>
  <dd>Show this help message.</dd>

  <dt><code>,version</code></dt>
  <dd>Show version information.</dd>

  <dt><code>,license</code></dt>
  <dd>Show license information.</dd>
</dl>
<p>
You can type the above commands anywhere in the input text field to
invoke them. For example, type <code>,i</code> anywhere in input text
field and it will be immediately replaced with LaTeX delimiters for
inline math.
</p>
<p>
Muboard can also be used to create distributable boards with
Markdown + LaTeX content saved in it. See <a
href="https://github.com/susam/muboard">github.com/susam/muboard</a>
for more details.
</p>
`;break;case",version":s(",version","",""),i.innerHTML="Muboard 0.1.0";break;case",license":s(",license","",""),i.innerHTML=`
<p>
&copy; 2021 Susam Pal
</p>          
<p>
This is free and open source software. You can use, copy, modify, merge,
publish, distribute, sublicense, and/or sell copies of it, under the
terms of the MIT License. You can obtain a copy of the MIT License at
<a href="https://susam.github.io/licenses/mit.html">susam.github.io/licenses/mit.html</a>.
</p>
<p>
This software is provided <strong>"as is"</strong>, <strong>without
warranty of any kind</strong>, express or implied. See the MIT License
for details.
</p>
`;break;default:d()}else d()}function n(){const e=window.document.getElementsByTagName("textarea");i=window.document.createElement("main"),a=window.document.createElement("textarea"),a.placeholder=`Write content in LaTeX + Markdown format here.

Type ,help for help.`,0<e.length?(a.value=e[0].value.trim(),e[0].remove()):(a.value=window.document.body.innerHTML.trim(),window.document.body.innerHTML=""),void 0!==window.document.title&&""!==window.document.title||(window.document.title="Muboard"),window.document.body.appendChild(i),window.document.body.appendChild(a);const t=window.document.createElement("style");var n=o.green;t.appendChild(window.document.createTextNode(n)),window.document.head.appendChild(t);const d=window.document.createElement("meta");d.name="viewport",d.content="width=device-width; initial-scale=1.0",window.document.head.appendChild(d),r(),a.addEventListener("input",l)}t.texmeURL="https://cdn.jsdelivr.net/npm/texme@0.9.0",t.renderDelay=200,function(){let e;for(e in t)"undefined"!=typeof window&&void 0!==window.muboard&&void 0!==window.muboard[e]&&(t[e]=window.muboard[e])}(),window.texme={renderOnLoad:!1},function(e,t){const n=window.document.createElement("script");n.src=e,n.onload=t,window.document.head.appendChild(n)}(t.texmeURL),window.addEventListener("load",n)}();