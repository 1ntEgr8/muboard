!function(){"use strict";const i="Muboard",o="0.3.0-dev";let a,d,e=null;const t={};const r={green:`
html {height: 100%}
body {
  background: #eec; font-family: helvetica, arial, sans-serif;
  line-height: 1.5; margin: 0; padding: 0.75em; box-sizing:
  border-box; height: 100%;
}
main {
  background: #255; color: #eed;
  border: 0.75em ridge #933; padding: 1em; box-sizing: border-box;
  width: 100%; height: 66%; resize: both; overflow: auto;
}
textarea {
  background: #111; color: #9c9; display: block; margin-top: 0.75rem;
  border-width: 0.125rem; padding: 0.375rem; box-sizing: border-box;
  width: 100%; height: calc(34% - 0.75em);
}
pre, code, samp, kbd {color: #dec; font-family: monospace, monospace}
h1 {font-size: 1.5em}
h2 {font-size: 1.25em}
h1, h2, h3, h4, h5, h6 {margin: 1em 0 0.5em 0; line-height: 1.2}
main > :first-child, main > :first-child > :first-child {margin-top: 0}
section > :first-child, section > :first-child > :first-child {margin-top: 0}
a:link, a:visited {color: #ccf}
a:hover, a:active {color: #e76}
hr {border: 0; border-bottom: thin solid #fbc}
.center {text-align: center}
article {max-width: 40em; margin: 0 auto}
main > section {display: flex}
main > section > section {
  display: block; flex-basis: 100%; padding: 0 0.5em;
}
main > section > section:first-child {padding-left: 0}
main > section > section:last-child {padding-right}
`};function s(){d.innerHTML=window.texme.render(a.value),window.MathJax.texReset(0),window.MathJax.typeset()}function c(){l(),e=window.setTimeout(s,t.renderDelay)}function l(){null!==e&&(window.clearTimeout(e),e=null)}function m(e,t,n){var o=a.selectionStart,i=o-e.length,e=i+t.length;const d=a.value;l(),a.value=d.substr(0,i)+t+n+d.substr(o),a.setSelectionRange(e,e)}function h(e){var t=a.selectionStart;let n;n=t<=10?a.value.substr(0,t):a.value.substr(t-10,10);t=n.lastIndexOf(",");if(-1!==t)switch(n.substr(t)){case",clear":l(),d.innerHTML=a.value="",s();break;case",i":m(",i","$ "," $"),s();break;case",d":m(",d","$$ "," $$"),s();break;case",align;":m(",align;","\\begin{align}\n","\n\\end{align}"),s();break;case",align*":m(",align*","\\begin{align*}\n","\n\\end{align*}"),s();break;case",article":m(",article","<article>\n\n","\n\n</article>"),s();break;case",split":m(",split","<section>\n<section>\n\n","\n\n</section>\n<section>\n\n\n\n</section>\n</section>"),s();break;case",section":m(",section","<section>\n\n","\n\n</section>"),s();break;case",center":m(",center",'<div class="center">\n\n',"\n\n</div>"),s();break;case",save":m(",save","",""),s(),setTimeout(u,10);break;case",load":m(",load","",""),s(),setTimeout(w,10);break;case",remove":m(",remove","",""),s(),setTimeout(p,10);break;case",list":m(",list","",""),s(),function(){if(0!==window.localStorage.length){let t=`<article>
<h1>Saved Keys</h1>
<p>
The following Muboard keys are saved in the local storage of your
browser:
</p>
<ol>`;for(let e=0;e<window.localStorage.length;e++)t+="<li>"+window.localStorage.key(e)+"</li>";t+=`</ol>
<p>
Type <code>,load</code> to load any key.
</p>
</article>`,d.innerHTML=t}else d.innerHTML="<article><h1>No Keys Found</h1></article>"}();break;case",help":m(",help","",""),d.innerHTML=`
<article>
<h1>${i}</h1>
<p>
Muboard is a web-based mathematics display board. Muboard lets you
scribble mathematics using LaTeX and Markdown while presenting your
desktop screen.
</p>
<h2>Commands</h2>
<p>
The following commands that may be typed anywhere in the input text
field:
</p>
<dl>
  <dt><code>,clear</code></dt>
  <dd>Clear text input field and the board.</dd>

  <dt><code>,i</code></dt>
  <dd>Insert inline mathematics.</dd>

  <dt><code>,d</code></dt>
  <dd>Insert display mathematics.</dd>

  <dt><code>,align;</code></dt>
  <dd>Insert align envrionment.</dd>

  <dt><code>,align*</code></dt>
  <dd>Insert align* environment.</dd>

  <dt><code>,article</code></dt>
  <dd>
    Insert article element. The article element is displayed as a
    single column of text at the center of the board with a fixed
    maximum width that makes the text easier to read. Recommended for
    distributable boards.
  </dd>

  <dt><code>,split</code></dt>
  <dd>
    Split the board into two side-by-side columnar sections. More
    columnar sections may be added with the next command.
  </dd>

  <dt><code>,section</code></dt>
  <dd>
    Insert section element.
  </dd>

  <dt><code>,save</code></dt>
  <dd>
    Save current input to the browser's local storage.
  </dd>

  <dt><code>,load</code></dt>
  <dd>
    Load an input from the browser's local storage.
  </dd>

  <dt><code>,remove</code></dt>
  <dd>
    Remove an input from the browser's local storage.
  </dd>

  <dt><code>,list</code></dt>
  <dd>
    List all inputs saved in the browser's local storage.
  </dd>

  <dt><code>,center</code></dt>
  <dd>Insert center-aligned text.</dd>

  <dt><code>,help</code></dt>
  <dd>Show this help message.</dd>

  <dt><code>,version</code></dt>
  <dd>Show version and license information.</dd>
</dl>
<p>
You can type the above commands anywhere in the input text field to
invoke them. For example, type <code>,i</code> anywhere in input text
field and it will be immediately replaced with LaTeX delimiters for
inline math.
</p>
<p>
${i} can also be used to create distributable boards with Markdown
+ LaTeX content saved in it. See <a
href="https://github.com/susam/muboard">github.com/susam/muboard</a>
for more details.
</p>
<hr style="margin: 1em 0">
<div style="font-size: small; text-align: center">
<p>
${i} is created and maintained by <a
href="https://twitter.com/intent/follow?screen_name=susam">Susam</a>.
</p>
<p>
The source code is available on
<a href="https://github.com/susam/muboard">GitHub</a>.
</p>
</div>
</article>
`;break;case",version":m(",version","",""),d.innerHTML=`
<article>
<h1>${i} ${o}</h1>
<p>
Copyright &copy; 2021 Susam Pal
</p>
<p>
This is free and open source software. You can use, copy, modify,
merge, publish, distribute, sublicense, and/or sell copies of it,
under the terms of the <a
href="https://github.com/susam/muboard/blob/master/LICENSE.md">MIT
License</a>.
</p>
<p>
This software is provided <em>"as is"</em>, <em>without
warranty of any kind</em>, express or implied. See the MIT License
for details.
</p>
</article>
`;break;default:c()}else c()}function n(){const e=window.document.getElementsByTagName("textarea");d=window.document.createElement("main"),a=window.document.createElement("textarea"),a.placeholder=`Write content in LaTeX + Markdown format here.

Type ,help for help.`,0<e.length?(a.value=e[0].value.trim(),e[0].remove()):(a.value=window.document.body.innerHTML.trim(),window.document.body.innerHTML=""),void 0!==window.document.title&&""!==window.document.title||(window.document.title=i),window.document.body.appendChild(d),window.document.body.appendChild(a),a.focus();const t=window.document.createElement("style");var n=r.green;t.appendChild(window.document.createTextNode(n)),window.document.head.appendChild(t);const o=window.document.createElement("meta");o.name="viewport",o.content="width=device-width, initial-scale=1.0",window.document.head.appendChild(o),s(),a.addEventListener("input",h)}function u(){const e="Provide a key name to save the current input to the browser's local storage.\n\nYou can use the same key to load the input later.";var t=window.prompt(e);if(null!==t)if(""!==t)if(/\s/.test(t))d.innerHTML=`<article>
<h1>Error</h1>
<p>Key cannot have whitespace.</p>
</article>`;else{if(null!==window.localStorage.getItem(t)){const e="A key with the given name already exists.\n\nDo you want to overwrite the same key?";if(!1===window.confirm("A key with the given name already exists.\n\nDo you want to overwrite the same key?"))return}window.localStorage.setItem(t,a.value)}else d.innerHTML=`<article>
<h1>Error</h1>
<p>Key cannot be empty string.</p>
</article>`}function w(){var e=window.prompt("Provide a key name to load input from the browser's local storage."),e=window.localStorage.getItem(e);null!==e?(a.value=e,s()):d.innerHTML=`<article>
<h1>Error</h1>
<p>Key does not exist.</p>
</article>`}function p(){var e=window.prompt("Provide name of key to remove from browser's local storage.");null!==window.localStorage.getItem(e)?window.localStorage.removeItem(e):d.innerHTML=`<article>
<h1>Error</h1>
<p>Key does not exist.</p>
</article>`}t.texmeURL="https://cdn.jsdelivr.net/npm/texme@0.9.0",t.renderDelay=200,function(){let e;for(e in t)"undefined"!=typeof window&&void 0!==window.muboard&&void 0!==window.muboard[e]&&(t[e]=window.muboard[e])}(),window.texme={renderOnLoad:!1},function(e,t){const n=window.document.createElement("script");n.src=e,n.onload=t,window.document.head.appendChild(n)}(t.texmeURL),window.addEventListener("load",n)}();